{:objects
 {:Careseeker
  {:description "A person seeking care"
   :fields
   {:id {:type (non-null Int)}
    :name {:type String}
    :pronouns {:type String}
    :email {:type (non-null String)}
    :state {:type (non-null String)}
    :alias {:type String}
    :phone {:type String}
    :ok_to_text {:type Boolean}
    ;; TODO should these be datetimes?
    :date_created {:type String}
    :date_modified {:type String}}}

  :User
  {:description "A user account"
   :fields
   {:id {:type (non-null String)}
    :first_name {:type String}
    :last_name {:type String}
    :pronouns {:type String}
    :phone {:type String}
    :email {:type String}}}

  :Provider
  {:description "A doctor or other medical expert"
   :fields
   {:id {:type (non-null Int)}
    :first_name {:type String}
    :last_name {:type String}
    :pronouns {:type String}
    :phone {:type String}
    :email {:type String}
    :state {:type String}}}

  :Appointment
  {:description "An appointment between a specific Careseeker and Provider"
   :fields
   {:id {:type (non-null Int)}
    :start_time {:type String}
    :end_time {:type String}
    :careseeker_id {:type String}
    :provider_id {:type String}
    :reason {:type String}
    :provider_notes {:type String}
    :transcription {:type String}
    :state {:type String}
    :category {:type String}
    :resolution {:type String}}}

  :Availability
  {:description "A chunk of time in which a specific provider is available"
   :fields
   {:id {:type (non-null Int)}
    :start_time {:type String}
    :end_time {:type String}
    :provider {:type :Provider}}}

  :AppointmentWindow
  {:description "A window for a single appointment. Derived from availability data rather that reified in the database."
   :fields
   {:start_time {:type String}
    :end_time {:type String}
    :provider {:type :Provider}}}

  :Invitation
  {:description "An invitation for a new user account"
   :fields
   {:email {:type (non-null String)}
    :code {:type String}
    :redeemed {:type Boolean}
    :date_invited {:type String}}}}

 :queries
 {:careseeker
  {:type :Careseeker
   :description "Get a Careseeker by their ID"
   :args {:id {:type Int}}
   :resolve :query/careseeker}

  :availabilities
  {:type (list :Availability)
   :description "Get availabilities by start/end/state"
   :args {:from {:type String}
          :to {:type String}
          :state {:type String}
          :provider_id {:type String}}
   :resolve :query/availabilities}

  :appointment
  {:type :Appointment
   :description "Get a single appointment by its ID"
   :args {:id {:type Int}}
   :resolve :query/appointment}

  :appointments
  {:type (list :Appointment)
   :description "Get appointments by dates/provider"
   :args {:from {:type String}
          :to {:type String}
          :provider_id {:type Int}
          :status {:type String}}
   :resolve :query/appointments}

  :appointment_windows
  {:type (list :AppointmentWindow)
   :description "Get open appointment windows by dates/state"
   :args {:from {:type String}
          :to {:type String}
          :state {:type String}}
   :resolve :query/windows}

  :user
  {:type :User
   :description "Get a single user"
   :args {:id {:type Int}}
   :resolve :query/user}

  :users
  {:type (list :User)
   :description "Get a list of users"
   :args {:count {:type Int}
          :offset {:type Int}
          :account_created_start {:type String}
          :account_created_end {:type String}}
   :resolve :query/users}

  :invitations
  {:type (list :Invitation)
   :description "Get a list of invitations"
   :args {:invited_by {:type Int}
          :redeemed {:type Boolean}}
   :resolve :query/invitations}}

 :mutations
 {:book
  {:type :Appointment
   :args {:provider_id {:type Int}
          :start {:type String}
          :end {:type String}}
   :resolve :mutation/book}

  :invite
  {:type :Invitation
   :args {:email {:type String}}
   :resolve :mutation/invite}

  :register
  {:type :User
   :args {:first_name {:type String}
          :last_name {:type String}
          :email {:type String}
          :code {:type String}
          :phone {:type String}
          :password {:type String}
          :password_confirmation {:type String}}
   :resolve :mutation/register}}}